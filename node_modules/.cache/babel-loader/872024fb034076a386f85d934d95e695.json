{"ast":null,"code":"var _jsxFileName = \"/home/lsnhp01/Documents/ReactJS/burgerking/src/Components/CartItem.js\",\n    _s = $RefreshSig$();\n\nimport { AddRounded, RemoveRounded } from '@mui/icons-material';\nimport React, { useEffect, useState } from 'react';\nimport { actionType } from './reducer';\nimport { useStateValue } from './StateProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet cartItems = [];\n\nconst CartItem = _ref => {\n  _s();\n\n  let {\n    name,\n    imgSrc,\n    price,\n    itemId\n  } = _ref;\n  const [qty, setQty] = useState(1);\n  const [itemPrice, setItemPrice] = useState(parseInt(qty) * parseFloat(price));\n  const [{\n    cart\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    cartItems = cart;\n    setItemPrice(parseInt(qty) * parseFloat(price));\n  }, [qty, cart, price]);\n\n  const updateQuantity = (action, id) => {\n    if (action === 'add') {\n      setQty(qty + 1);\n    } else if (action === 'remove') {\n      if (qty === 1) {\n        cartItems.pop(id);\n        dispatch({\n          action: actionType.SET_CART,\n          cart: cartItems\n        });\n      }\n\n      setQty(qty - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgBox\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgSrc,\n        alt: \"item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"itemName\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemQuantity\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"x \", qty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity\",\n          children: [/*#__PURE__*/_jsxDEV(RemoveRounded, {\n            className: \"itemRemove\",\n            onClick: () => updateQuantity('remove', itemId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddRounded, {\n            className: \"itemAdd\",\n            onClick: () => updateQuantity('add', itemId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"itemPrice\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dolorSign\",\n        children: \"$ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"itemPriceValue\",\n        children: itemPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartItem, \"Hf8JL414LD180aEuRvaPOup+Miw=\", false, function () {\n  return [useStateValue];\n});\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["/home/lsnhp01/Documents/ReactJS/burgerking/src/Components/CartItem.js"],"names":["AddRounded","RemoveRounded","React","useEffect","useState","actionType","useStateValue","cartItems","CartItem","name","imgSrc","price","itemId","qty","setQty","itemPrice","setItemPrice","parseInt","parseFloat","cart","dispatch","updateQuantity","action","id","pop","SET_CART"],"mappings":"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","sourcesContent":["import { AddRounded, RemoveRounded } from '@mui/icons-material';\nimport React, { useEffect, useState } from 'react';\nimport { actionType } from './reducer';\nimport { useStateValue } from './StateProvider';\n\nlet cartItems = [];\n\nconst CartItem = ({ name, imgSrc, price, itemId }) => {\n  const [qty, setQty] =useState(1);\n  const [itemPrice, setItemPrice] = useState(parseInt(qty) * parseFloat(price));\n  const [{cart}, dispatch] = useStateValue();\n\n  useEffect(()=>{\n    cartItems = cart;\n    setItemPrice(parseInt(qty) * parseFloat(price));\n  },[qty,cart,price])\n\n  const updateQuantity = (action, id) => {\n    if(action === 'add') {\n      setQty(qty + 1);\n    }\n    else if(action === 'remove') {\n      if(qty === 1) {\n        cartItems.pop(id);\n        dispatch({\n          action: actionType.SET_CART,\n          cart: cartItems\n        })\n      }\n      setQty(qty - 1);\n    }\n  };\n\n  return (\n    <div className='cardItem'>\n      <div className='imgBox'>\n        <img src={imgSrc} alt='item' />\n      </div>\n\n      <div className='itemSection'>\n        <h2 className='itemName'>{name}</h2>\n        <div className='itemQuantity'>\n          <span>x {qty}</span>\n          <div className='quantity'>\n            <RemoveRounded className='itemRemove' onClick={() => updateQuantity('remove', itemId) }/>\n\n            <AddRounded className='itemAdd' onClick={() => updateQuantity('add', itemId)} />\n          </div>\n        </div>\n      </div>\n\n      <p className='itemPrice'>\n        <span className='dolorSign'>$ </span>\n        <span className='itemPriceValue'>{itemPrice}</span>\n      </p>\n    </div>\n  );\n};\n\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}